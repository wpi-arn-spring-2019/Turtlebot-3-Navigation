<launch>

  <!--Fake Turtlebot-->
  <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <param name="tb3_model" value="$(arg model)"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!--Rviz-->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find bringup)/rviz/tbot3.rviz"/>

  <!--Gazebo-->
  <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(find localization)/maps/map.yaml"/>

  <!-- EKF -->
  <include file="$(find odom_ekf)/launch/odom_ekf.launch"/>

  <!-- Localization -->
  <include file="$(find localization)/launch/localization.launch"/>

  <!--Costmap
  <include file="$(find cost_map)/launch/cost_map.launch"/>-->

  <!-- Global Planner -->
  <include file="$(find global_planner)/launch/global_planner.launch"/>

  <!-- Local Navigator -->
  <include file="$(find local_navigator)/launch/local_navigator.launch"/>

  <!-- Local Planner -->
  <include file="$(find local_planner)/launch/local_planner.launch"/>

  <!-- Controller -->
  <include file="$(find controller)/launch/controller_sim.launch"/>


</launch>
